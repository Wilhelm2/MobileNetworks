//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/AppCo.msg.
//

#ifndef __INET_APPCO_M_H
#define __INET_APPCO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class AppCo;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "StationWirelessMessage_m.h" // import StationWirelessMessage

// cplusplus {{
  
    #include "../commun_f.h"
// }}


namespace inet {

// cplusplus {{
    
    #include <vector> 
    typedef std::vector<tuple<idMsg,unsigned int>> TupleVectorAppCo;
    typedef idMsg idMsgAppCo;
// }}

/**
 * Class generated from <tt>Messages/AppCo.msg:42</tt> by nedtool.
 * <pre>
 * class AppCo extends StationWirelessMessage
 * {
 *     unsigned int seq_S;
 *     unsigned int targetHostId;
 *     unsigned int Ses;
 *     idMsgAppCo id;
 *     TupleVectorAppCo msgOrder;
 * }
 * </pre>
 */
class AppCo : public ::inet::StationWirelessMessage
{
  protected:
    unsigned int seq_S = 0;
    unsigned int targetHostId = 0;
    unsigned int Ses = 0;
    idMsgAppCo id;
    TupleVectorAppCo msgOrder;

  private:
    void copy(const AppCo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppCo&);

  public:
    AppCo();
    AppCo(const AppCo& other);
    virtual ~AppCo();
    AppCo& operator=(const AppCo& other);
    virtual AppCo *dup() const override {return new AppCo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSeq_S() const;
    virtual void setSeq_S(unsigned int seq_S);
    virtual unsigned int getTargetHostId() const;
    virtual void setTargetHostId(unsigned int targetHostId);
    virtual unsigned int getSes() const;
    virtual void setSes(unsigned int Ses);
    virtual const idMsgAppCo& getId() const;
    virtual idMsgAppCo& getIdForUpdate() { handleChange();return const_cast<idMsgAppCo&>(const_cast<AppCo*>(this)->getId());}
    virtual void setId(const idMsgAppCo& id);
    virtual const TupleVectorAppCo& getMsgOrder() const;
    virtual TupleVectorAppCo& getMsgOrderForUpdate() { handleChange();return const_cast<TupleVectorAppCo&>(const_cast<AppCo*>(this)->getMsgOrder());}
    virtual void setMsgOrder(const TupleVectorAppCo& msgOrder);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppCo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppCo& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_APPCO_M_H

