//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/AppS_h.msg.
//

#ifndef __INET_APPS_H_M_H
#define __INET_APPS_H_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class AppS_h;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "StationWirelessMessage_m.h" // import StationWirelessMessage

// cplusplus {{
  
    #include "../commun_f.h"
// }}


namespace inet {

// cplusplus {{
    
    #include <vector> 
    typedef std::vector<unsigned int> IntVectorReqAppS_h;
    typedef idMsg idMsgAppS_h;
// }}

/**
 * Class generated from <tt>Messages/AppS_h.msg:41</tt> by nedtool.
 * <pre>
 * class AppS_h extends StationWirelessMessage
 * {
 *     unsigned int seq_S; // num de seq pour ordre FIFO
 *     IntVectorReqAppS_h M_d;
 *     idMsgAppS_h id;
 * }
 * </pre>
 */
class AppS_h : public ::inet::StationWirelessMessage
{
  protected:
    unsigned int seq_S = 0;
    IntVectorReqAppS_h M_d;
    idMsgAppS_h id;

  private:
    void copy(const AppS_h& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppS_h&);

  public:
    AppS_h();
    AppS_h(const AppS_h& other);
    virtual ~AppS_h();
    AppS_h& operator=(const AppS_h& other);
    virtual AppS_h *dup() const override {return new AppS_h(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSeq_S() const;
    virtual void setSeq_S(unsigned int seq_S);
    virtual const IntVectorReqAppS_h& getM_d() const;
    virtual IntVectorReqAppS_h& getM_dForUpdate() { handleChange();return const_cast<IntVectorReqAppS_h&>(const_cast<AppS_h*>(this)->getM_d());}
    virtual void setM_d(const IntVectorReqAppS_h& M_d);
    virtual const idMsgAppS_h& getId() const;
    virtual idMsgAppS_h& getIdForUpdate() { handleChange();return const_cast<idMsgAppS_h&>(const_cast<AppS_h*>(this)->getId());}
    virtual void setId(const idMsgAppS_h& id);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AppS_h& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AppS_h& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_APPS_H_M_H

