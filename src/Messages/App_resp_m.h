//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/App_resp.msg.
//

#ifndef __INET_APP_RESP_M_H
#define __INET_APP_RESP_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class App_resp;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "FIFOCom_m.h" // import FIFOCom

// cplusplus {{
  
    #include "../commun_f.h"
// }}


namespace inet {

// cplusplus {{
    typedef idMsg idMsgApp_resp;
// }}

/**
 * Class generated from <tt>Messages/App_resp.msg:39</tt> by nedtool.
 * <pre>
 * class App_resp extends FIFOCom
 * {
 *     idMsgApp_resp id;
 *     unsigned int s_resp;
 *     unsigned int seqS;
 * }
 * </pre>
 */
class App_resp : public ::inet::FIFOCom
{
  protected:
    idMsgApp_resp id;
    unsigned int s_resp = 0;
    unsigned int seqS = 0;

  private:
    void copy(const App_resp& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const App_resp&);

  public:
    App_resp();
    App_resp(const App_resp& other);
    virtual ~App_resp();
    App_resp& operator=(const App_resp& other);
    virtual App_resp *dup() const override {return new App_resp(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const idMsgApp_resp& getId() const;
    virtual idMsgApp_resp& getIdForUpdate() { handleChange();return const_cast<idMsgApp_resp&>(const_cast<App_resp*>(this)->getId());}
    virtual void setId(const idMsgApp_resp& id);
    virtual unsigned int getS_resp() const;
    virtual void setS_resp(unsigned int s_resp);
    virtual unsigned int getSeqS() const;
    virtual void setSeqS(unsigned int seqS);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const App_resp& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, App_resp& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_APP_RESP_M_H

