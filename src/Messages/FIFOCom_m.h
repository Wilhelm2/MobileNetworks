//
// Generated file, do not edit! Created by nedtool 5.5 from Messages//FIFOCom.msg.
//

#ifndef __INET_FIFOCOM_M_H
#define __INET_FIFOCOM_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class FIFOCom;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk


namespace inet {

/**
 * Class generated from <tt>Messages//FIFOCom.msg:22</tt> by nedtool.
 * <pre>
 * class FIFOCom extends FieldsChunk
 * {
 *     unsigned int SourceId;
 *     unsigned int SourceSeq;
 * }
 * </pre>
 */
class FIFOCom : public ::inet::FieldsChunk
{
  protected:
    unsigned int SourceId = 0;
    unsigned int SourceSeq = 0;

  private:
    void copy(const FIFOCom& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const FIFOCom&);

  public:
    FIFOCom();
    FIFOCom(const FIFOCom& other);
    virtual ~FIFOCom();
    FIFOCom& operator=(const FIFOCom& other);
    virtual FIFOCom *dup() const override {return new FIFOCom(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSourceId() const;
    virtual void setSourceId(unsigned int SourceId);
    virtual unsigned int getSourceSeq() const;
    virtual void setSourceSeq(unsigned int SourceSeq);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const FIFOCom& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, FIFOCom& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_FIFOCOM_M_H

