//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/Init.msg.
//

#ifndef __INET_INIT_M_H
#define __INET_INIT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class Init;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "inet/networklayer/common/L3Address_m.h" // import inet.networklayer.common.L3Address

#include "HostMessage_m.h" // import HostMessage

// cplusplus {{
  
    #include "../MobileHosts/MHState.h"
// }}


namespace inet {

// cplusplus {{
    typedef MHState::STATE MHSTATEInit;
// }}

/**
 * Class generated from <tt>Messages/Init.msg:41</tt> by nedtool.
 * <pre>
 * class Init extends HostMessage
 * {
 *     unsigned int targetHostId;
 *     unsigned int seq_S;
 *     unsigned int Ses;
 *     unsigned int Ses_LC;
 *     unsigned int id_S;
 *     MHSTATEInit state;
 * }
 * </pre>
 */
class Init : public ::inet::HostMessage
{
  protected:
    unsigned int targetHostId = 0;
    unsigned int seq_S = 0;
    unsigned int Ses = 0;
    unsigned int Ses_LC = 0;
    unsigned int id_S = 0;
    MHSTATEInit state;

  private:
    void copy(const Init& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Init&);

  public:
    Init();
    Init(const Init& other);
    virtual ~Init();
    Init& operator=(const Init& other);
    virtual Init *dup() const override {return new Init(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getTargetHostId() const;
    virtual void setTargetHostId(unsigned int targetHostId);
    virtual unsigned int getSeq_S() const;
    virtual void setSeq_S(unsigned int seq_S);
    virtual unsigned int getSes() const;
    virtual void setSes(unsigned int Ses);
    virtual unsigned int getSes_LC() const;
    virtual void setSes_LC(unsigned int Ses_LC);
    virtual unsigned int getId_S() const;
    virtual void setId_S(unsigned int id_S);
    virtual const MHSTATEInit& getState() const;
    virtual MHSTATEInit& getStateForUpdate() { handleChange();return const_cast<MHSTATEInit&>(const_cast<Init*>(this)->getState());}
    virtual void setState(const MHSTATEInit& state);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Init& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Init& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_INIT_M_H

