//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/TimeoutAppCo.msg.
//

#ifndef __TIMEOUTAPPCO_M_H
#define __TIMEOUTAPPCO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class TimeoutAppCo;
#include "AlgoTimeout_m.h" // import AlgoTimeout

/**
 * Class generated from <tt>Messages/TimeoutAppCo.msg:18</tt> by nedtool.
 * <pre>
 * packet TimeoutAppCo extends AlgoTimeout
 * {
 *     unsigned int seq;
 *     unsigned int id_h;
 *     unsigned int Ses;
 * }
 * </pre>
 */
class TimeoutAppCo : public ::AlgoTimeout
{
  protected:
    unsigned int seq = 0;
    unsigned int id_h = 0;
    unsigned int Ses = 0;

  private:
    void copy(const TimeoutAppCo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TimeoutAppCo&);

  public:
    TimeoutAppCo(const char *name=nullptr, short kind=0);
    TimeoutAppCo(const TimeoutAppCo& other);
    virtual ~TimeoutAppCo();
    TimeoutAppCo& operator=(const TimeoutAppCo& other);
    virtual TimeoutAppCo *dup() const override {return new TimeoutAppCo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSeq() const;
    virtual void setSeq(unsigned int seq);
    virtual unsigned int getId_h() const;
    virtual void setId_h(unsigned int id_h);
    virtual unsigned int getSes() const;
    virtual void setSes(unsigned int Ses);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TimeoutAppCo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TimeoutAppCo& obj) {obj.parsimUnpack(b);}

#endif // ifndef __TIMEOUTAPPCO_M_H

