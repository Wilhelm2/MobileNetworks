//
// Generated file, do not edit! Created by nedtool 5.5 from Messages/TimeoutAppS_h.msg.
//

#ifndef __TIMEOUTAPPS_H_M_H
#define __TIMEOUTAPPS_H_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



class TimeoutAppS_h;
#include "AlgoTimeout_m.h" // import AlgoTimeout

/**
 * Class generated from <tt>Messages/TimeoutAppS_h.msg:18</tt> by nedtool.
 * <pre>
 * packet TimeoutAppS_h extends AlgoTimeout
 * {
 *     unsigned int seq;
 * }
 * </pre>
 */
class TimeoutAppS_h : public ::AlgoTimeout
{
  protected:
    unsigned int seq = 0;

  private:
    void copy(const TimeoutAppS_h& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TimeoutAppS_h&);

  public:
    TimeoutAppS_h(const char *name=nullptr, short kind=0);
    TimeoutAppS_h(const TimeoutAppS_h& other);
    virtual ~TimeoutAppS_h();
    TimeoutAppS_h& operator=(const TimeoutAppS_h& other);
    virtual TimeoutAppS_h *dup() const override {return new TimeoutAppS_h(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getSeq() const;
    virtual void setSeq(unsigned int seq);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TimeoutAppS_h& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TimeoutAppS_h& obj) {obj.parsimUnpack(b);}

#endif // ifndef __TIMEOUTAPPS_H_M_H

